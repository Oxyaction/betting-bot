package handlers

import (
	"context"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api"
	"github.com/sirupsen/logrus"
	"gitlab.com/fireferretsbet/tg-bot/internal/config"
)

var startMenuKeyboard = tgbotapi.NewReplyKeyboard(
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ üìÇ"),
		tgbotapi.NewKeyboardButton("–ë–∞–ª–∞–Ω—Å üè¶"),
	),
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("–ù–µ–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ —Å—Ç–∞–≤–∫–∏ ü§î"),
		tgbotapi.NewKeyboardButton("–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ —Å—Ç–∞–≤–∫–∏ ‚úÖ"),
	),
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("–ò—Å—Ç–æ—Ä–∏—è —Å—Ç–∞–≤–æ–∫ üìú"),
	),
)

type StartHandler struct {
	GenericHandler
}

func NewStartHandler(log *logrus.Logger, config *config.Config, bot *tgbotapi.BotAPI) Handler {
	return &StartHandler{
		GenericHandler{
			keys: []string{"start", "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è"},
			bot:  bot,
		},
	}
}

func (h *StartHandler) Handle(update tgbotapi.Update, ctx context.Context) tgbotapi.MessageConfig {
	msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç FireFerrets –±–æ—Ç –¥–ª—è —Å—Ç–∞–≤–æ–∫. üî•üêπü§ë")
	msg.ReplyMarkup = startMenuKeyboard
	return msg
}
