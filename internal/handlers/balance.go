package handlers

import (
	"context"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api"
	"gitlab.com/fireferretsbet/tg-bot/internal/serverenv"
)

var balanceMenuKeyboard = tgbotapi.NewReplyKeyboard(
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("–ü–æ–ø–æ–ª–Ω–∏—Ç—å üí≥"),
		tgbotapi.NewKeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è"),
	),
)

type BalanceHandler struct {
	GenericHandler
}

func NewBalanceHandler(env *serverenv.ServerEnv) Handler {
	return &BalanceHandler{
		GenericHandler{
			keys: []string{"–ë–∞–ª–∞–Ω—Å üè¶", "top_up_success"},
			env:  env,
		},
	}
}

func (h *BalanceHandler) Handle(update tgbotapi.Update, ctx context.Context) tgbotapi.MessageConfig {
	var text string
	// top_up_success
	if h.env.UserManager().GetContextRoute(update.Message.From.ID) == "top_up_success" {
		text = "–ë–∞–ª–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω ‚úÖ\n\n"
	} else {
		text = "–ë–∞–ª–∞–Ω—Å üè¶\n\n"
	}
	text += "–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: *100 $*."
	msg := tgbotapi.NewMessage(update.Message.Chat.ID, text)
	msg.ParseMode = "Markdown"
	msg.ReplyMarkup = balanceMenuKeyboard
	return msg
}
